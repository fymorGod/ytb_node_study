generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TypeCategoria {
  REFRIGERACAO
  ELETRICA
  TELEMETRIA
  IRRADIACAO
}

enum TypeStatus {
  FUNCIONANDO
  STAND_BY
  DEFEITO
  MANUTENCAO
}

enum TypeAntena {
  OMNIDIRECIONAL
  DIRETIVA
}

enum TypeCabo {
  C_7_8
  C_15_8
  C_31_8
}

enum TypeDps {
  D_1
  D_2
  D_3
}

enum TypeTowers {
  AUTOPORTANTE
  ESTAIADA
}

// model Documents {
//   id               String         @id @default(uuid())
//   path             String

//   antenaId         String
//   arcondicionadoId String
//   nobreakId        String
//   switchiesId      String
//   telemetriaId     String
//   tarefaId         String
//   disjuntorId      String
//   stationId        String
//   caboId           String
//   combinadorId     String
//   dpsId            String
//   exaustorId       String
//   receptorId       String
//   parabolicaId     String
//   torreId          String
//   transmissorId    String
//   antena           Antena         @relation(fields: [antenaId], references: [id])
//   arcondicionado   Arcondicionado @relation(fields: [arcondicionadoId], references: [id])
//   nobreak          Nobreak        @relation(fields: [nobreakId], references: [id])
//   switchies        Switchies      @relation(fields: [switchiesId], references: [id])
//   telemetria       Telemetria     @relation(fields: [telemetriaId], references: [id])
//   tarefa           Tarefa         @relation(fields: [tarefaId], references: [id])
//   disjuntor        Disjuntor      @relation(fields: [disjuntorId], references: [id])
//   station          Station        @relation(fields: [stationId], references: [id])
//   cabo             Cabo           @relation(fields: [caboId], references: [id])
//   combinador       Combinador     @relation(fields: [combinadorId], references: [id])
//   dps              Dps            @relation(fields: [dpsId], references: [id])
//   exaustor         Exaustor       @relation(fields: [exaustorId], references: [id])
//   receptor         Receptor       @relation(fields: [receptorId], references: [id])
//   parabolica       Parabolica     @relation(fields: [parabolicaId], references: [id])
//   torre            Torre          @relation(fields: [torreId], references: [id])
//   transmissor      Transmissor    @relation(fields: [transmissorId], references: [id])
// }
model Documento {
  id String @id @default(uuid())

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  path         String
  filename     String
  originalName String
  fileFormat   String

  Documento_Antenas        Documento_Antenas[]
  Documento_Arcondicionado Documento_Arcondicionado[]
  Documento_Cabo           Documento_Cabo[]
  Documento_Combinador     Documento_Combinador[]
  Documento_Disjuntor      Documento_Disjuntor[]
  Documento_Dps            Documento_Dps[]
  Documento_Exaustor       Documento_Exaustor[]
  Documento_Nobreak        Documento_Nobreak[]
  Documento_Parabolica     Documento_Parabolica[]
  Documento_Receptor       Documento_Receptor[]
  Documento_Station        Documento_Station[]
  Documento_Switch         Documento_Switch[]
  Documento_Telemetria     Documento_Telemetria[]
  Documento_Torre          Documento_Torre[]
  Documento_Transmissor    Documento_Transmissor[]

  @@map("documentos")
}

model Documento_Antenas {
  id String @id @default(uuid())

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  id_doc    String
  documento Documento @relation(fields: [id_doc], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Antena    Antena?   @relation(fields: [antenaId], references: [id])
  antenaId  String?

  @@map("documentos_antenas")
}

model Documento_Arcondicionado {
  id String @id @default(uuid())

  created_at       DateTime        @default(now())
  updated_at       DateTime        @updatedAt
  Documento        Documento?      @relation(fields: [documentoId], references: [id])
  documentoId      String?
  Arcondicionado   Arcondicionado? @relation(fields: [arcondicionadoId], references: [id])
  arcondicionadoId String?

  @@map("documentos_arcondicionados")
}

model Documento_Cabo {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?
  Cabo        Cabo?      @relation(fields: [caboId], references: [id])
  caboId      String?

  @@map("documentos_cabos")
}

model Documento_Combinador {
  id String @id @default(uuid())

  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  Documento    Documento?  @relation(fields: [documentoId], references: [id])
  documentoId  String?
  Combinador   Combinador? @relation(fields: [combinadorId], references: [id])
  combinadorId String?

  @@map("documentos_combinador")
}

model Documento_Disjuntor {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?
  Disjuntor   Disjuntor? @relation(fields: [disjuntorId], references: [id])
  disjuntorId String?

  @@map("documentos_disjuntor")
}

model Documento_Dps {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?
  Dps         Dps?       @relation(fields: [dpsId], references: [id])
  dpsId       String?

  @@map("documentos_dps")
}

model Documento_Exaustor {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?

  @@map("documentos_exaustor")
}

model Documento_Nobreak {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?
  Nobreak     Nobreak?   @relation(fields: [nobreakId], references: [id])
  nobreakId   String?

  @@map("documentos_nobreak")
}

model Documento_Parabolica {
  id String @id @default(uuid())

  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  Documento    Documento?  @relation(fields: [documentoId], references: [id])
  documentoId  String?
  Parabolica   Parabolica? @relation(fields: [parabolicaId], references: [id])
  parabolicaId String?

  @@map("documentos_parabolica")
}

model Documento_Receptor {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?
  Receptor    Receptor?  @relation(fields: [receptorId], references: [id])
  receptorId  String?

  @@map("documentos_receptor")
}

model Documento_Station {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?
  Station     Station?   @relation(fields: [stationId], references: [id])
  stationId   String?

  @@map("documentos_station")
}

model Documento_Switch {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?
  Switchies   Switchies? @relation(fields: [switchiesId], references: [id])
  switchiesId String?

  @@map("documentos_switch")
}

model Documento_Telemetria {
  id String @id @default(uuid())

  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  Documento    Documento?  @relation(fields: [documentoId], references: [id])
  documentoId  String?
  Telemetria   Telemetria? @relation(fields: [telemetriaId], references: [id])
  telemetriaId String?

  @@map("documentos_telemetria")
}

model Documento_Torre {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?
  Torre       Torre?     @relation(fields: [torreId], references: [id])
  torreId     String?

  @@map("documentos_torre")
}

model Documento_Transmissor {
  id String @id @default(uuid())

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Documento   Documento? @relation(fields: [documentoId], references: [id])
  documentoId String?

  @@map("documentos_transmissor")
}

model User {
  id              String @id @default(uuid())
  name            String
  email           String @unique
  password        String
  contato         String
  empresa         String
  contato_empresa String

  manutencao Manutencao?
  Access     Access?     @relation(fields: [accessId], references: [id])
  accessId   String?
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
}

model Access {
  id         String   @id @default(uuid())
  name       String   @unique
  user       User[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum TipoManutencao {
  PREVENTIVA
  CORRETIVA
}

enum StatusManutencao {
  AGENDADA
  EM_EXECUCAO
  EM_AGUARDO
  FINALIZADA
}

model Manutencao {
  id         String           @id @default(uuid())
  dataCreate DateTime
  tipo       TipoManutencao
  checklist  Checklist[]
  observacao String
  status     StatusManutencao
  User       User             @relation(fields: [userId], references: [id])
  Station    Station          @relation(fields: [stationId], references: [id])
  userId     String           @unique
  stationId  String           @unique
}

model Antena {
  id                String              @id @default(uuid())
  codigo            String              @unique
  marca             String
  modelo            String
  categoria         TypeCategoria
  status            TypeStatus
  gain              String
  tipos_antena      TypeAntena
  posicao_torre     Float
  vr                String
  Documento_Antenas Documento_Antenas[]
  transmissores     Transmissor[]
  TipoEquipamento   TipoEquipamento?    @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
  Station           Station?            @relation(fields: [stationId], references: [id])
  stationId         String?
}

model TipoEquipamento {
  id             String           @id @default(uuid())
  name           String           @unique
  antena         Antena[]
  arcondicionado Arcondicionado[]
  cabo           Cabo[]
  combinador     Combinador[]
  disjuntor      Disjuntor[]
  dps            Dps[]
  exaustor       Exaustor[]
  nobreak        Nobreak[]
  parabolica     Parabolica[]
  receptor       Receptor[]
  switchies      Switchies[]
  telemetria     Telemetria[]
  torre          Torre[]
  transmissor    Transmissor[]
  checklist      Checklist[]
  quadro         Quadro[]
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
}

model Checklist {
  id                String           @id @default(uuid())
  name              String
  tarefa            Tarefa[]
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  TipoEquipamento   TipoEquipamento? @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Template          Template?        @relation(fields: [templateId], references: [id])
  templateId        String?
  Manutencao        Manutencao?      @relation(fields: [manutencaoId], references: [id])
  manutencaoId      String?
}

model Tarefa {
  id              String     @id @default(uuid())
  description     String
  verificado      Boolean
  foto_verificado Boolean
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
  Checklist       Checklist? @relation(fields: [checklistId], references: [id])
  checklistId     String?
}

model Template {
  id         String      @id @default(uuid())
  name       String
  Checklist  Checklist[]
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
}

// model ChecklistTemplate {
//   id          String     @id @default(uuid())
//   Checklist   Checklist? @relation(fields: [checklistId], references: [id])
//   checklistId String?
//   Template    Template?  @relation(fields: [templateId], references: [id])
//   templateId  String?
// }

model Arcondicionado {
  id                       String                     @id @default(uuid())
  codigo                   String                     @unique
  marca                    String
  modelo                   String
  categoria                TypeCategoria
  status                   TypeStatus
  potencia                 Int
  tensao                   Int
  created_at               DateTime                   @default(now())
  updated_at               DateTime                   @updatedAt
  Documento_Arcondicionado Documento_Arcondicionado[]
  TipoEquipamento          TipoEquipamento?           @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId        String?
  Station                  Station?                   @relation(fields: [stationId], references: [id])
  stationId                String?
}

model Cabo {
  id                String           @id @default(uuid())
  codigo            String           @unique
  marca             String
  modelo            String
  categoria         TypeCategoria
  status            TypeStatus
  tipos_cabo        TypeCabo
  tamanho           Float
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  Documento_Cabo    Documento_Cabo[]
  TipoEquipamento   TipoEquipamento? @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Station           Station?         @relation(fields: [stationId], references: [id])
  stationId         String?
}

model Combinador {
  id                   String                 @id @default(uuid())
  codigo               String                 @unique
  marca                String
  modelo               String
  categoria            TypeCategoria
  status               TypeStatus
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  Documento_Combinador Documento_Combinador[]
  TipoEquipamento      TipoEquipamento?       @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId    String?
  Station              Station?               @relation(fields: [stationId], references: [id])
  stationId            String?
}

model Disjuntor {
  id                  String                @id @default(uuid())
  codigo              String                @unique
  marca               String
  modelo              String
  categoria           TypeCategoria
  status              TypeStatus
  corrente_maxima     Int
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  Documento_Disjuntor Documento_Disjuntor[]
  TipoEquipamento     TipoEquipamento?      @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId   String?
  Station             Station?              @relation(fields: [stationId], references: [id])
  stationId           String?
  Quadro              Quadro?               @relation(fields: [quadroId], references: [id])
  quadroId            String?
}

model Quadro {
  id                String           @id @default(uuid())
  codigo            String           @unique
  categoria         TypeCategoria
  status            TypeStatus
  Dps               Dps[]
  Disjuntor         Disjuntor[]
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  TipoEquipamento   TipoEquipamento? @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Station           Station?         @relation(fields: [stationId], references: [id])
  stationId         String?
}

model Dps {
  id                String           @id @default(uuid())
  codigo            String           @unique
  marca             String
  modelo            String
  categoria         TypeCategoria
  status            TypeStatus
  classe_dps        TypeDps
  corrente_maxima   Int
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  Documento_Dps     Documento_Dps[]
  TipoEquipamento   TipoEquipamento? @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Station           Station?         @relation(fields: [stationId], references: [id])
  stationId         String?
  Quadro            Quadro?          @relation(fields: [quadroId], references: [id])
  quadroId          String?
}

model Exaustor {
  id                String           @id @default(uuid())
  codigo            String           @unique
  marca             String
  modelo            String
  categoria         TypeCategoria
  status            TypeStatus
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  TipoEquipamento   TipoEquipamento? @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Station           Station?         @relation(fields: [stationId], references: [id])
  stationId         String?
}

model Nobreak {
  id                String              @id @default(uuid())
  codigo            String              @unique
  marca             String
  modelo            String
  categoria         TypeCategoria
  status            TypeStatus
  tensao_entrada    Int
  tensao_saida      Int
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
  Documento_Nobreak Documento_Nobreak[]
  TipoEquipamento   TipoEquipamento?    @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Station           Station?            @relation(fields: [stationId], references: [id])
  stationId         String?
}

model Parabolica {
  id                   String                 @id @default(uuid())
  codigo               String                 @unique
  marca                String
  modelo               String
  categoria            TypeCategoria
  status               TypeStatus
  diametro             Float
  satelite             String
  receptor             Receptor[]
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  Documento_Parabolica Documento_Parabolica[]
  TipoEquipamento      TipoEquipamento?       @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId    String?
  Station              Station?               @relation(fields: [stationId], references: [id])
  stationId            String?
}

model Receptor {
  id                 String               @id @default(uuid())
  codigo             String               @unique
  marca              String
  modelo             String
  categoria          TypeCategoria
  status             TypeStatus
  channel            Float
  frequencia         Int
  symbol_rate        Int
  created_at         DateTime             @default(now())
  updated_at         DateTime             @updatedAt
  Documento_Receptor Documento_Receptor[]
  TipoEquipamento    TipoEquipamento?     @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId  String?
  Parabolica         Parabolica?          @relation(fields: [parabolicaId], references: [id])
  parabolicaId       String?
  Station            Station?             @relation(fields: [stationId], references: [id])
  stationId          String?
  Transmissor        Transmissor[]
}

model Station {
  id                String              @id @default(uuid())
  name              String              @unique
  latitude          String
  longitude         String
  address           String
  link_grafana      String
  status            TypeStatus
  manutencao        Manutencao?
  Documento_Station Documento_Station[]
  antena            Antena[]
  arcondicionado    Arcondicionado[]
  cabo              Cabo[]
  combinador        Combinador[]
  disjuntor         Disjuntor[]
  dps               Dps[]
  exaustor          Exaustor[]
  nobreak           Nobreak[]
  parabolica        Parabolica[]
  receptor          Receptor[]
  switchies         Switchies[]
  telemetria        Telemetria[]
  torre             Torre[]
  transmissor       Transmissor[]
  quadro            Quadro[]
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
}

model Switchies {
  id                String             @id @default(uuid())
  codigo            String             @unique
  marca             String
  modelo            String
  categoria         TypeCategoria
  status            TypeStatus
  qtd_portas        Int
  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt
  Documento_Switch  Documento_Switch[]
  TipoEquipamento   TipoEquipamento?   @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Station           Station?           @relation(fields: [stationId], references: [id])
  stationId         String?
}

model Telemetria {
  id                   String                 @id @default(uuid())
  codigo               String                 @unique
  marca                String
  modelo               String
  categoria            TypeCategoria
  status               TypeStatus
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  Documento_Telemetria Documento_Telemetria[]
  TipoEquipamento      TipoEquipamento?       @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId    String?
  Station              Station?               @relation(fields: [stationId], references: [id])
  stationId            String?
}

model Torre {
  id                String            @id @default(uuid())
  codigo            String            @unique
  marca             String
  modelo            String
  categoria         TypeCategoria
  status            TypeStatus
  tipo_torre        TypeTowers
  aterramento       Boolean
  altura            Float
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
  Documento_Torre   Documento_Torre[]
  TipoEquipamento   TipoEquipamento?  @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Station           Station?          @relation(fields: [stationId], references: [id])
  stationId         String?
}

model Transmissor {
  id                String           @id @default(uuid())
  codigo            String           @unique
  marca             String
  modelo            String
  categoria         TypeCategoria
  status            TypeStatus
  programmed        Float
  canal_fisico      Float
  canal_virtual     Float
  acoplador_one     String?
  acoplador_two     String?
  Receptor          Receptor?        @relation(fields: [receptorId], references: [id])
  receptorId        String?
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  Antena            Antena?          @relation(fields: [antenaId], references: [id])
  antenaId          String?
  TipoEquipamento   TipoEquipamento? @relation(fields: [tipoEquipamentoId], references: [id])
  tipoEquipamentoId String?
  Station           Station?         @relation(fields: [stationId], references: [id])
  stationId         String?
}
